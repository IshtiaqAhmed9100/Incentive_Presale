{"abi":[{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenPriceFeed","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"priceFeedData","type":"tuple[]","internalType":"struct TokenRegistry.PriceFeedData[]","components":[{"name":"priceFeed","type":"address","internalType":"contract AggregatorV3Interface"},{"name":"normalizationFactorForToken","type":"uint8","internalType":"uint8"},{"name":"tolerance","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"tokenData","inputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"priceFeed","type":"address","internalType":"contract AggregatorV3Interface"},{"name":"normalizationFactorForToken","type":"uint8","internalType":"uint8"},{"name":"tolerance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenDataAdded","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"contract IERC20"},{"name":"data","type":"tuple","indexed":false,"internalType":"struct TokenRegistry.PriceFeedData","components":[{"name":"priceFeed","type":"address","internalType":"contract AggregatorV3Interface"},{"name":"normalizationFactorForToken","type":"uint8","internalType":"uint8"},{"name":"tolerance","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"error","name":"ArrayLengthMismatch","inputs":[]},{"type":"error","name":"IdenticalValue","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroLengthArray","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","setTokenPriceFeed(address[],(address,uint8,uint256)[])":"cbbb2899","tokenData(address)":"27e45c2c","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLengthArray\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"normalizationFactorForToken\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct TokenRegistry.PriceFeedData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"TokenDataAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"normalizationFactorForToken\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenRegistry.PriceFeedData[]\",\"name\":\"priceFeedData\",\"type\":\"tuple[]\"}],\"name\":\"setTokenPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenData\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"normalizationFactorForToken\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"TokenDataAdded(address,(address,uint8,uint256))\":{\"details\":\"Emitted when address of Chainlink price feed contract is added for the token\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTokenPriceFeed(address[],(address,uint8,uint256)[])\":{\"params\":{\"priceFeedData\":\"Contains the price feed of the tokens, tolerance and the normalization factor\",\"tokens\":\"The addresses of the tokens\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Tokens Registry contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ArrayLengthMismatch()\":[{\"notice\":\"Thrown when two array lengths does not match\"}],\"IdenticalValue()\":[{\"notice\":\"Thrown when updating with the same value as previously stored\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when updating an address with zero address\"}],\"ZeroLengthArray()\":[{\"notice\":\"Thrown when updating with an array of no values\"}]},\"kind\":\"user\",\"methods\":{\"setTokenPriceFeed(address[],(address,uint8,uint256)[])\":{\"notice\":\"Sets token price feeds and normalization factors\"},\"tokenData(address)\":{\"notice\":\"Gives us onchain price oracle address of the token\"}},\"notice\":\"Implements the price feed of the tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenRegistry.sol\":\"TokenRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/Common.sol\":{\"keccak256\":\"0xfb246ef5abb7c44c704370755f7a7218d898ba232b45fbdc40a98926ecc79f6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dddc552cfe8c2d55000b22668cea1f276e3ad33532f688835a0c89c9d285e5d4\",\"dweb:/ipfs/QmUfAyhfUFjJ57erJza4MwuFQKarxdkzWgJbXPQiF4pA6T\"]},\"contracts/TokenRegistry.sol\":{\"keccak256\":\"0x2f28c53d7df8c88769c78f0828c804b67b09ed6180ff192bcbb83a80ee80cb6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04694d570403b3f803cbc0342b9f8b46dd21c8b006fc4b5c72960526089e8907\",\"dweb:/ipfs/QmVneuJ8X6U9G9pJSjDFQkRrKgGmrnuLPHp5vqM4h5KrN3\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xc3a94ff6a613cc03d06048aebc8c72f209b3bbf34b6dd85a0d4b0f6423fd47aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6c7a6214b3eb244ad41b2aea23e6ea8630304439b319c2ede04fe95f93a746\",\"dweb:/ipfs/Qmavj5PG5XJQkM1vDeQCUAK18LXfWWREc1Zk3praqXhBdL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ArrayLengthMismatch"},{"inputs":[],"type":"error","name":"IdenticalValue"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroLengthArray"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address","indexed":false},{"internalType":"struct TokenRegistry.PriceFeedData","name":"data","type":"tuple","components":[{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"},{"internalType":"uint8","name":"normalizationFactorForToken","type":"uint8"},{"internalType":"uint256","name":"tolerance","type":"uint256"}],"indexed":false}],"type":"event","name":"TokenDataAdded","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"struct TokenRegistry.PriceFeedData[]","name":"priceFeedData","type":"tuple[]","components":[{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"},{"internalType":"uint8","name":"normalizationFactorForToken","type":"uint8"},{"internalType":"uint256","name":"tolerance","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"setTokenPriceFeed"},{"inputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"tokenData","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"},{"internalType":"uint8","name":"normalizationFactorForToken","type":"uint8"},{"internalType":"uint256","name":"tolerance","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setTokenPriceFeed(address[],(address,uint8,uint256)[])":{"params":{"priceFeedData":"Contains the price feed of the tokens, tolerance and the normalization factor","tokens":"The addresses of the tokens"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"setTokenPriceFeed(address[],(address,uint8,uint256)[])":{"notice":"Sets token price feeds and normalization factors"},"tokenData(address)":{"notice":"Gives us onchain price oracle address of the token"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/TokenRegistry.sol":"TokenRegistry"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/Common.sol":{"keccak256":"0xfb246ef5abb7c44c704370755f7a7218d898ba232b45fbdc40a98926ecc79f6c","urls":["bzz-raw://dddc552cfe8c2d55000b22668cea1f276e3ad33532f688835a0c89c9d285e5d4","dweb:/ipfs/QmUfAyhfUFjJ57erJza4MwuFQKarxdkzWgJbXPQiF4pA6T"],"license":"MIT"},"contracts/TokenRegistry.sol":{"keccak256":"0x2f28c53d7df8c88769c78f0828c804b67b09ed6180ff192bcbb83a80ee80cb6f","urls":["bzz-raw://04694d570403b3f803cbc0342b9f8b46dd21c8b006fc4b5c72960526089e8907","dweb:/ipfs/QmVneuJ8X6U9G9pJSjDFQkRrKgGmrnuLPHp5vqM4h5KrN3"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"keccak256":"0xc3a94ff6a613cc03d06048aebc8c72f209b3bbf34b6dd85a0d4b0f6423fd47aa","urls":["bzz-raw://df6c7a6214b3eb244ad41b2aea23e6ea8630304439b319c2ede04fe95f93a746","dweb:/ipfs/Qmavj5PG5XJQkM1vDeQCUAK18LXfWWREc1Zk3praqXhBdL"],"license":"MIT"}},"version":1},"id":6}